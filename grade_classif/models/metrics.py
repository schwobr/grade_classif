#AUTOGENERATED! DO NOT EDIT! File to edit: dev/24_models.metrics.ipynb (unless otherwise specified).

__all__ = ['accuracy', 'fp_rate', 'fn_rate', 'precision', 'recall', 'f_beta', 'f_1']

#Cell
from ..imports import *

#Cell
def _reshape(input, target):
    n = target.shape[0]
    input = torch.softmax(input, dim=1)
    input = input.argmax(dim=-1).view(n,-1)
    target = target.view(n,-1)
    return input, target

#Cell
def accuracy(tp, fp, tn, fn):
    return (tp+tn)/(tp+fp+fn+tn+1e-7)

#Cell
def fp_rate(tp, fp, tn, fn):
    return fp/(fp+tn+1e-7)

#Cell
def fn_rate(tp, fp, tn, fn):
    return fn/(fn+tp+1e-7)

#Cell
def precision(tp, fp, tn, fn, cat=0):
    if cat == 1:
        return tp/(fp+tp+1e-7)
    else:
        return tn/(fn+tn+1e-7)

#Cell
def recall(tp, fp, tn, fn, cat=0):
    if cat == 1:
        return tp/(fn+tp+1e-7)
    else:
        return tn/(fp+tn+1e-7)

#Cell
def f_beta(tp, fp, tn, fn, beta=1, cat=0):
    prec = precision(tp, fp, tn, fn, cat)
    rec = recall(tp, fp, tn, fn, cat)
    return ((1+beta**2)*prec*rec+1e-7)/(beta**2*prec+rec+1e-7)

#Cell
def f_1(tp, fp, tn, fn, cat=0):
    return f_beta(tp, fp, tn, fn, beta=1, cat=cat)