#AUTOGENERATED! DO NOT EDIT! File to edit: dev/13_data.utils.ipynb (unless otherwise specified).

__all__ = ['np_to_tensor', 'show_img', 'load_batches']

#Cell
import matplotlib.pyplot as plt
import torch
from .loaders import ImageLoader

#Cell
def np_to_tensor(x, tensor_type):
    if tensor_type == 'image':
        x = x.transpose(2, 0, 1)
    x = torch.tensor(x)
    return x

#Cell
def show_img(x, ax=None, figsize=(3,3), title=None, hide_axis=True, cmap='viridis', alpha=None, **kwargs):
    if ax is None: fig,ax = plt.subplots(figsize=figsize)
    xtr = dict(cmap=cmap, alpha=alpha, **kwargs)
    ax.imshow(x, **xtr)
    if hide_axis: ax.axis('off')
    if title: ax.set_title(title)
    return ax

#Cell
def load_batches(folder, bs=16, device='cpu'):
    x = []
    image_loader = ImageLoader('3G')
    for fn in folder.iterdir():
        if len(batch) < batch_size:
            img = image_loader(fn)
            img = np_to_tensor(img).to(device)
            x.append(img)
        else:
            yield torch.stack(x)
            x = []